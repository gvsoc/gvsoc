from plptest.testsuite import *
import pexpect
import random
import os
import sys


def run():
    while True:

        port = random.randint(4000, 20000)

        os.environ['GV_PROXY_PORT'] = str(port)

        try:
            run = pexpect.spawn(f'make run runner_args="--config-opt=**/gvsoc/proxy/enabled=true --config-opt=**/gvsoc/proxy/port={port}"', encoding='utf-8', logfile=sys.stdout, env=os.environ)
            match = run.expect(['Opened proxy on socket '], timeout=None)
            if match == 0:
                break

            run.expect(pexpect.EOF, timeout=None)
        except:
            pass

    proxy = pexpect.spawn(f'./gvcontrol --host=localhost --port={port}', encoding='utf-8', logfile=sys.stdout)

    while True:
        match = run.expect(['Hello', pexpect.EOF, pexpect.TIMEOUT], timeout=1)
        if match == 0:
            break
        elif match == 1:
            return -1

        proxy.expect([pexpect.EOF, pexpect.TIMEOUT], timeout=1)

    return 0


# Called by plptest to declare the tests
def testset_build(testset):

    #
    # Test list decription
    #
    test = testset.new_test('16_how_to_control_gvsoc_from_a_python_script')
    test.add_command(Shell('clean', 'make clean'))
    test.add_command(Shell('gvsoc', 'make prepare gvsoc'))
    test.add_command(Shell('all', 'make all'))
    test.add_command(Call('run', run))
