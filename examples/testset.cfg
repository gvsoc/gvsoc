import os
from plptest.testsuite import *



# Called by plptest to declare the tests
def testset_build(testset):

    cwd = testset.get_path()

    #
    # Test list decription
    #
    test = testset.new_test('linux_boot')
    test.add_command(Shell('run', './launch_linux.py'))

    #test = testset.new_test('pulp_open_ddr')
    #test.add_command(Shell('run', 'mkdir -p pulp-open-ddr'))
    #test.add_command(Shell('run', f'gvsoc --target=pulp-open-ddr --work pulp-open --binary {cwd}/add_dramsyslib_patches/dma_dram_test.bin image flash run'))

    test = testset.new_test('pulp_open')
    test.add_command(Shell('run', 'mkdir -p pulp-open'))
    test.add_command(Shell('run', f'gvsoc --target=pulp-open --work pulp-open --binary {cwd}/pulp-open/hello image flash run'))

    test = testset.new_test('rv64')
    test.add_command(Shell('run', 'mkdir -p rv64'))
    test.add_command(Shell('run', f'gvsoc --target=rv64 --work rv64 --binary {cwd}/pk --arg {cwd}/hello run'))

    test = testset.new_test('pulp.spatz.spatz')
    test.add_command(Shell('run', 'mkdir -p pulp.spatz.spatz'))
    test.add_command(Shell('run', f'gvsoc --target=pulp.spatz.spatz --work pulp.spatz.spatz --binary {cwd}/test-spatzBenchmarks-dp-fdotp_M128 run'))

    test = testset.new_test('snitch_spatz')
    test.add_command(Shell('run', 'mkdir -p snitch_spatz'))
    test.add_command(Shell('run', f'gvsoc --target=snitch_spatz --work snitch_spatz --binary {cwd}/rv64uv-p-vfadd run'))

    test = testset.new_test('occamy')
    test.add_command(Shell('run', 'mkdir -p occamy'))
    test.add_command(Shell('run', f'gvsoc --target=occamy --work occamy --binary {cwd}/offload-multi_cluster.elf run'))

    test = testset.new_test('snitch')
    test.add_command(Shell('run', 'mkdir -p snitch'))
    test.add_command(Shell('run', f'gvsoc --target=snitch --work snitch --binary {cwd}/fp32_computation_vector.elf run'))

    test = testset.new_test('pulp.snitch.snitch_cluster_single')
    test.add_command(Shell('run', 'mkdir -p pulp.snitch.snitch_cluster_single'))
    test.add_command(Shell('run', f'gvsoc --target=pulp.snitch.snitch_cluster_single --work pulp.snitch.snitch_cluster_single --binary {cwd}/fp32_computation_vector.elf run'))

    test = testset.new_test('siracusa')
    test.add_command(Shell('run', 'mkdir -p siracusa'))
    test.add_command(Shell('run', f'gvsoc --target=siracusa --work siracusa --binary {cwd}/neureka_test run'))
