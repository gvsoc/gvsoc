name: check_build_works
on: [push, pull_request]

jobs:
  build_ubuntu:
    name: Try build on ubuntu 22.04
    runs-on: ubuntu-22.04
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install system software requirements
        run: |
          sudo apt update
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt-get install -y build-essential git doxygen python3-pip libsdl2-dev curl gtkwave libsndfile1-dev rsync autoconf automake texinfo libtool pkg-config libsdl2-ttf-dev gcc-11 g++-11
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
          gcc --version
          # Install CMake 3.28.3
          wget https://github.com/Kitware/CMake/releases/download/v3.28.3/cmake-3.28.3-linux-x86_64.tar.gz
          tar -xzf cmake-3.28.3-linux-x86_64.tar.gz
          sudo mv cmake-3.28.3-linux-x86_64 /opt/cmake-3.28.3
          sudo ln -sf /opt/cmake-3.28.3/bin/cmake /usr/local/bin/cmake
          cmake --version
      - name: Install python requirements
        run: |
          pwd
          ls -la
          sudo pip3 install -r core/requirements.txt
          sudo pip3 install -r gapy/requirements.txt
          sudo pip3 install -r requirements.txt
      - name: build all targets
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 100
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-11 100
          gcc --version
          source sourceme.sh
          make all TARGETS=pulp-open-ddr
          make all TARGETS=rv64
          make all TARGETS=pulp-open
          make config
          make TARGETS=pulp.chips.flex_cluster.flex_cluster all
      - name: Run examples
        run: |
          source sourceme.sh
          ./install/bin/gvsoc --target=pulp-open --binary examples/pulp-open/hello image flash run
          ./install/bin/gvsoc --target=rv64 --binary examples/pk --arg ./examples/hello run
          ./install/bin/gvsoc --target=pulp-open-ddr --binary soft_hier/dma_dram_test.bin image flash run
          ./install/bin/gvsoc --target=pulp.chips.flex_cluster.flex_cluster --binary examples/SoftHier/binary/example.elf run --trace=/chip/cluster_0/redmule
      - name: Run SoftHier ReadMe
        run: |
          source sourceme.sh
          cfg=examples/SoftHier/config/arch_test.py app=examples/SoftHier/software/test make hs run
          cfg=examples/SoftHier/config/arch_test_8x8.py app=examples/SoftHier/software/test make hs run
          cfg=examples/SoftHier/config/arch_spatz_check.py app=examples/SoftHier/software/spatz_check make hs run
          cfg=examples/SoftHier/config/arch_NoC512.py app=examples/SoftHier/software/gemm_systolic make hs runv
          cfg=examples/SoftHier/config/arch_NoC1024.py app=examples/SoftHier/software/gemm_systolic make hs runv pfto
          python examples/SoftHier/assembled/HBM_preload_example/preload/hbm_data.py
          cfg=examples/SoftHier/assembled/HBM_preload_example/config/arch.py app=examples/SoftHier/assembled/HBM_preload_example/software pld=examples/SoftHier/assembled/HBM_preload_example/preload/preload.elf make hs runv
      - name: Run SoftHier Tutorial
        run: |
          source sourceme.sh
          make -C tutorial/0_softhier_architecture_introduction/ all
          make -C tutorial/1_HBM_accesses/ hbm_pld
          make -C tutorial/1_HBM_accesses/ hbm_l1
          make -C tutorial/1_HBM_accesses/ l1_hbm
          make -C tutorial/1_HBM_accesses/ hbm_dump
      - name: SoftHier Scale Check
        run: |
          source sourceme.sh
          cfg=examples/SoftHier/config/arch_test_8x8.py app=examples/SoftHier/software/scale_check make hs run
          cfg=examples/SoftHier/config/arch_test_16x16.py app=examples/SoftHier/software/scale_check make hs run
          cfg=examples/SoftHier/config/arch_test_32x32.py app=examples/SoftHier/software/scale_check make hs run

  # Removed due to no space left on eth machine
  # build_eth:
  #   name: Try to build on ETH internal servers
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Mirror and check
  #       uses: pulp-platform/pulp-actions/gitlab-ci@v2
  #       # Skip on forks or pull requests from forks due to missing secrets.
  #       if: github.repository == 'gvsoc/gvsoc' && (github.event_name != 'pull_request' || github.event.pull_request.head.repo.full_name == github.repository)
  #       with:
  #         domain: iis-git.ee.ethz.ch
  #         repo: github-mirror/gvsoc
  #         token: ${{ secrets.GITLAB_TOKEN }}
